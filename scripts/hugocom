#!/usr/bin/perl -T
use strict;
use warnings;
use File::Find;
use File::Basename;

sub indexDir {
    my ($filter) = @_;

    my $startDir = "/home/rocky/github.com/DnFreddie/Notes/content/posts/";

    # Untaint the directory path
    if ( $startDir =~ m{^(/[\w\-/\.]+)$} ) {
        $startDir = $1;
    }
    else {
        die "Invalid directory path: $startDir";
    }

    unless ( -d $startDir ) {
        die "Directory $startDir does not exist or is not a directory.";
    }

    my @files;
    find(
        {
            wanted => sub {
                return if -d $_;

                # Untaint the file path before using it
                if ( $File::Find::name =~ m{^(.*)$} ) {
                    my $untainted_file = $1;
                    push @files, $untainted_file;
                }
            },
            no_chdir => 1
        },
        $startDir
    );

    my @mapArray;
    for my $file (@files) {
        my $file_name = File::Basename::basename($file);
        $file_name =~ s/\..*$//;

        my ($relative_path) = $file =~ m!(posts/.*)!;

        if ( !defined $relative_path ) {
            warn "Could not find 'posts/' in path: $file\n";
            next;
        }

        if ( $file_name =~ /$filter/i ) {

            $file_name =~ s/_/ /g;

            push @mapArray,
              {
                name => $file_name,
                path => $relative_path
              };
        }
    }

    return @mapArray;
}

sub replace {
    my ($strings) = @_;
    return sprintf( '[%s](%s)', $strings->{name}, $strings->{path} );
}

while ( my $line = <STDIN> ) {
    chomp $line;

    if ( $line =~ /^(.*)$/ ) {
        $line =~ s/\s+/_/g;
    }
    else {
        die "Input line is invalid or tainted";
    }

    $line =~ s/\[(.*?)\]/ 
        my @matches = indexDir($1);  
        if (@matches) {
            replace($matches[0]);  
        } else {
            "[$1]";  
        } 
    /eg;

    print "$line\n";
}

